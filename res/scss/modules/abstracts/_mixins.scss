// *** Nav Mixins
@mixin submenu {
    position: absolute;
    z-index: -9;
    opacity: 0;
    visibility: hidden;
    display: flex;
    flex-direction: column;
    top: 0;
    background: $primaryGrad2;
    background-color: $black;
    pointer-events: none;
}

// *** Nav Mixins
@mixin dropdownMenu {
    position: absolute;
    z-index: -9;
    opacity: 0;
    visibility: hidden;
    display: flex;
    flex-direction: column;
    background-color: $primary;
    pointer-events: none;
    a {
        cursor: pointer;
        transition: background-color 200ms ease-in-out;
        
        &:not(:first-of-type):hover {
            background-color: $black;
            border-bottom-left-radius: $border-radius-large;
            border-bottom-right-radius: $border-radius-large;
        }
        &:last-of-type {
            border-bottom-left-radius: $border-radius-large;
            border-bottom-right-radius: $border-radius-large;
        }
    }
}

// *** Dropdown Mixins
// * Select Dropdown Menu
@mixin selectDropdown {
    @include inputField;
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    height: 4.4rem;
    padding: 1rem 3rem 1rem 2rem;
    cursor: pointer;
    // * Select Input Arrow
    &::after {
        /* BG Img	 */
        content: url("../assets/icons/carret-down.svg");
        position: absolute;
        right: 15px;
        top: 50%;
        transition: transform .5s;
        transform: translateY(-50%);
    }
}

// * Select Dropdown Option Container
@mixin selectDropdownOptionContainer {
    z-index: 10;
    max-height: 0;
    width: 100%;
    opacity: 0;
    overflow: hidden;
    transition: all 300ms;
    box-shadow: inset $box-shadow;
    border-bottom-left-radius: $border-radius-medium;
    border-bottom-right-radius: $border-radius-medium;
    background-color: $primary-bg;
    position: absolute;
    top: 100%;
    &.active {
        max-height: 240px;
        box-shadow: none;
        opacity: 1;
    }
    &.active+.selected {
        box-shadow: none;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }
    &.active+.selected::after {
        transform: translateY(-50%) rotateX(180deg);
    }
    .option {
        padding: 1.5rem 2rem;
        cursor: pointer;
        input[type='radio'] {
            display: none;
        }
    }
    .option:hover {
        background-color: $primary;
    }
    .option:hover>label>h4 {
        color: $white;
    }
    .option label {
        cursor: pointer;
    }
}

// *** Search Bar *** //
@mixin searchbar {
    position: relative;
    display: flex;
    align-items: center;
    // * Search input text-field
    input {
        @include inputField;
        position: relative;
        padding-left: $spacing-6x-large;
        &::placeholder {
            font-size: $font-size-large;
            position: absolute;
            top: 0;
            transform: translateY(1rem);
        }
        &::-webkit-search-cancel-button {
            -webkit-appearance: none;
        }
    }
    img {
        position: absolute;
        width: 8%;
        transform: translateX(1.5rem);
    }
}

// *** Button Mixins
// * Primary Button
@mixin primaryButton {
    border-radius: $border-radius-medium;
    padding: $btn-padding-2;
    font-size: $font-size-medium;
    font-weight: $font-weight-bold;
    color: $white;
    background-color: $primary;
    box-shadow: $box-shadow;
    cursor: pointer;
    transition: all 200ms ease-in-out;
    // * Primary Button Hover
    &:hover {
        background-color: $black;
        color: $white;
    }
}

// * Secondary Button
@mixin secondaryButton {
    @include primaryButton;
    padding: $btn-padding-4;
    &:hover {
        background-color: $black;
        color: $white;
    }
}

// * Decline Button
@mixin declineButton {
    @include primaryButton;
    box-shadow: none;
    background: transparent;
    color: $alert;
    border: 1px solid $alert;
    padding: $btn-padding-4;
    transition: all 200ms ease-in-out;
    // * Decline Button Hover
    &:hover {
        background-color: $alert;
        color: $white;
    }
}

// * Release Button
@mixin releaseButton {
    @include declineButton;
    border: 1px solid $green;
    color: $green;
    // * Release Button Hover
    &:hover {
        border: 1px solid $green;
        background-color: $green;
        color: $white;
    }
}

// * Progress Bar Button
@mixin progressBarButton {
    border-radius: calc(clamp(7rem, 2.604vw + 5rem, 10rem));
    padding: clamp($spacing-large, $spacing-large, $spacing-2x-large) clamp($spacing-medium, $spacing-medium, $spacing-large);

    // padding: $spacing-large $spacing-medium;
    font-size: $font-size-medium;
    font-weight: $font-weight-bold;
    color: $black;
    background-color: $secondary-bg;
    box-shadow: $box-shadow;
    cursor: pointer;
}

// * Table Button
@mixin tableButton {
    @include primaryButton;
    font-size: calc($font-size + .1rem);
    padding: $btn-padding-5;
}

// * Table Button 2
@mixin tableButton2 {
    @include primaryButton;
    font-size: $font-size-small;
    padding: $btn-padding-5;
}

// * Table Button 2
@mixin tableButton3 {
    @include primaryButton;
    font-size: $font-size-small;
    padding: $btn-padding-6;
}

// * Table Trash Button
@mixin tableTransparentTrashButton {
    @include transparentButton2;
    font-size: $font-size-small;
    padding: $btn-padding-5;
}


@mixin tableChips {
    position: relative;
    height: clamp(1.5rem, 2.5vw, 4rem);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: $btn-padding-3;
    border-radius: $border-radius-small;
    font-size: $font-size-medium;
    font-weight: $font-weight-medium;
    background-color: $white;
    color: $black;
    white-space: nowrap;
}

@mixin tableChipsWithX {
    position: absolute;
    right: 0;
    top: 0;
    transform: translate(-1rem, -0.2rem);
    &::before {
        content: 'X';
        cursor: pointer;
        z-index: 9;
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        
        font-size: $font-size-small;
        font-weight: $font-weight;
        color: $white;
        width: 1.5rem;
        height: 1.5rem;
        border-radius: $circle;
        background-color: $alert;
    }
}


// * Transparent Button
@mixin transparentButton {
    cursor: pointer;
    font-size: calc($font-size + .1rem);
    font-weight: $font-weight-bold;
    color: $primary;
    background: transparent;
    transition: all 200ms ease-in-out;
    &:hover {
        color: $black;
        transform: scale(1.005);
    }
}

// * Transparent Button 2
@mixin transparentButton2 {
    @include transparentButton;
    padding: $btn-padding-2;
    font-size: $font-size-medium;
    &:hover {
        color: $black;
        transform: scale(1.005);
    }
}

// * Transparent Button 3
@mixin transparentButton3 {
    cursor: pointer;
    background: none;
    padding: 0;
    color: $primary;
    font-size: $font-size-medium;
    font-weight: $font-weight-bold;
    text-decoration: underline;
    transition: 200ms ease-in-out;
    &:hover {
        color: $black
    }
}

// * Table Trash Button
@mixin transparentButton4 {
    @include transparentButton2;
    // font-size: $font-size-small;
    font-size: $font-size-medium;
    text-decoration: underline;
    padding: $btn-padding-5;
    color: $blackTR;
    &:hover {
        color: $primary;
    }
}

// * Table Show All Button
@mixin transparentButton5 {
    @include transparentButton2;
    font-size: $font-size-small;
    padding: $btn-padding-5;
    color: $blackTR;
    &:hover {
        color: $primary;
    }
}

// * Table Show All Button
@mixin transparentButton5 {
    @include transparentButton2;
    font-size: $font-size-small;
    font-weight: $font-weight;
    padding: $btn-padding-5;
    color: $blackTR;
    &:hover {
        color: $primary;
    }
}

// * Add/Subtract Button
@mixin addOrSubButton {
    cursor: pointer;
    font-size: $font-size-xx-large;
    font-weight: $font-weight-bold;
    width: 4rem;
    height: 4rem;
    border-radius: $border-radius-x-small;
    box-shadow: $box-shadow-3;
    transition: all ease-in-out 150ms;
    &:hover {
        background: rgba(0, 0, 0, 0.125);
        background-blend-mode: darken;
    }
    &:active {
        transform: translateY(0.4rem);
    }
}

// * File Button
@mixin fileButton {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: $font-size-small;
    font-weight: $font-weight;
    padding:  $spacing-medium $spacing-medium;
    border-radius: $border-radius-medium;
    box-shadow: $box-shadow-3;
    gap: 1rem;
    position: relative;
    transition: all ease-in-out 150ms;
    &:hover {
        background: rgba(0, 0, 0, 0.125);
        background-blend-mode: darken;
    }
    &:active {
        transform: translateY(0.4rem);
    }
    &:hover::before {
        content: 'X';
        cursor: pointer;
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        right: 0;
        top: 0;
        transform: translate(0.6rem, -0.4rem);
        font-size: $font-size-small;
        font-weight: $font-weight;
        color: $white;
        width: 1.5rem;
        height: 1.5rem;
        border-radius: $circle;
        background-color: $alert;
    }
}


// * Input Image Button
@mixin inputImageButton {
    position: relative;
    border-radius: $border-radius-medium;
    padding: $btn-padding-2;
    font-size: $font-size-medium;
    font-weight: $font-weight-bold;
    color: transparent;
    background-color: $primary;
    box-shadow: $box-shadow;
    cursor: pointer;
    transition: all 200ms ease-in-out;
    &::-webkit-file-upload-button {
        visibility: hidden;
    }
    &:before {
        position: absolute;
        display: inline;
        top: 0;
        left: 50%;
        transform: translate(-50%, 1rem);
        color: $white;
    }
    // * Input Image Button Hover
    &:hover {
        background-color: $black;
        color: transparent;
    }
}

// * Input Image Button 2
@mixin inputImageButton2 {
    width: 100%;
    position: relative;
    border-radius: $border-radius-medium;
    padding: $btn-padding-2;
    font-size: $font-size-medium;
    font-weight: $font-weight-bold;
    color: transparent;
    background-color: $primary;
    box-shadow: $box-shadow;
    cursor: pointer;
    transition: all 200ms ease-in-out;
    &::-webkit-file-upload-button {
        visibility: hidden;
    }
    &:before {
        position: absolute;
        display: inline;
        top: 0;
        left: 50%;
        transform: translate(-50%, 1rem);
        color: $white;
    }
    // * Input Image Button Hover
    &:hover {
        background-color: $black;
        color: transparent;
    }
}

// *** Dashboard Mixins
@mixin custom-scroll {
    &::-webkit-scrollbar {
        width: 1rem;
    }
    &::-webkit-scrollbar-track {
        border-radius: $border-radius-btn;
        box-shadow: inset 0 0 1rem rgba(0, 0, 0, 0.2);
    }
    &::-webkit-scrollbar-thumb {
        border-radius: $border-radius-btn;
        background-color: $primary;
    }
}


// * Dashboard 1
@mixin dashboard {
    position: fixed;
    right: 0;
    bottom: 0;
    height: calc(100% - 10%);
    width: calc(100% - 8%);
    z-index: 10;
    overflow-y: auto;
    @include custom-scroll;
}

// * Dashboard 2
@mixin dashboard2 {
    @include dashboard;
    background-color: $third-bg;
}


// *** Dashboard Grid Layouts
// ** md-con-2
@mixin md-con-2 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 0.6fr)minmax(0, 1.4fr);
    gap: 1rem 0;
}

// * md-card-wrapper
@mixin md-card-wrapper {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-columns: minmax(0, 1fr)minmax(0, 1fr)minmax(0, 1fr);
    gap: 10px 10px;
}

// * md-big-card
@mixin md-big-card {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 0.2fr)minmax(0, 1.8fr);
    gap: 1rem 0;
}

// * md-big-card-div-1
@mixin md-big-card-div-1 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-columns: minmax(0, 1fr)minmax(0, 1fr);
}

// * md-big-card-div-2
@mixin md-big-card-div-2 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 1fr);
}

// ** md-con-3
@mixin md-con-3 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 1.2fr) minmax(0, 1fr);
    gap: 1rem 0;
}

// * md-con-3-card-1
@mixin md-con-3-card-1 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 0.5fr) minmax(0, 0.1fr) minmax(0, 1fr);
    gap: 1rem 0px;
}

// * md-con-3-card-2
@mixin md-con-3-card-2 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 0.2fr) minmax(0, 1fr) minmax(0, 0.2fr);
    gap: 1rem 0px;
}

// *** Defaults
// * Container Default
@mixin containerDefault {
    border-radius: $border-radius-large;
    background-color: $white;
    box-shadow: $box-shadow;
}

@mixin containerDefault2 {
    @include containerDefault;
    box-shadow: $box-shadow-2;
}

// *** Input Field Mixins
// * Input Field
@mixin inputField {
    -moz-appearance: textfield;
    -webkit-appearance: none;
    margin: 0;
    font-size: $font-size-large;
    padding: 1rem 2rem;
    border: none;
    outline: none;
    background-color: $primary-bg;
    border-radius: $border-radius-medium;
    box-shadow: inset $box-shadow;
    transition: opacity 100ms ease-in-out;
    &:hover {
        opacity: .8;
    }
}

// * Input Select Field
@mixin selectField {
    position: relative;
    text-align: left;
    font-size: $font-size-large;
    padding: 1rem 2rem 1rem 2rem;
    border: none;
    outline: none;
    background-color: $primary-bg;
    border-radius: $border-radius-medium;
    -moz-appearance: none;
    /* Firefox */
    -webkit-appearance: none;
    /* Safari and Chrome */
    appearance: none;
}

// * Login Input Field
@mixin loginInputField {
    width: 100%;
    padding: $spacing-2x-large 0 $spacing-large $spacing-large;
    border-radius: $border-radius-medium;
    outline: none;
    border: none;
    color: $font-accent;
    background-color: $primary-bg;
    font-size: $font-size-large;
    box-shadow: inset 0px 4px 4px rgba(0, 0, 0, 0.25);
}

// * Table Checkbox
@mixin tableCheckboxInput {
    cursor: pointer;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    outline: none;
    appearance: none;
    -webkit-appearance: none;
    aspect-ratio: 1/1;
    height: 2rem;
    width: 2rem;
    border-radius: .4rem;
    background-color: $fourth-bg;
    transition: background-color 150ms ease-in-out;
    &:hover {
        background-color: $blackTR;
    }
    &::after {
        content: url('../assets/icons/white-check.svg');
        position: absolute;
        top: .1rem;
        visibility: hidden;
    }
    &:checked {
        background-color: $primary;
        animation: pop-up-big 300ms forwards;
    }
    &:checked:after {
        visibility: visible;
    }
}

// * Form Radio Buttons
@mixin formRadioButtons {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    outline: none;
    appearance: none;
    -webkit-appearance: none;
    box-shadow: none;
    scale: .7;
    height: 5rem;
    width: 5rem;
    border-radius: $circle;
    border: max(.4rem, 0.3em) solid $primary;
    background-color: $white;
    transition: background-color 150ms ease-in-out;
    &::after {
        content: '';
        position: absolute;
        height: calc(100% - 50%);
        width: calc(100% - 50%);
        background-color: $primary;
        border-radius: $circle;
        visibility: hidden;
        opacity: 0;
    }
    &:hover {
        background-color: $primaryTR;
    }
    &:checked {
        background-color: $white;
        animation: pop-up-big 300ms forwards;
    }
    &:checked:after {
        visibility: visible;
        opacity: 1;
    }
}


// * Form Checkbox
// @mixin formCheckbox {
//     @include tableCheckboxInput;
//     box-shadow: none;
//     height: 4.4rem;
//     width: 4.4rem;
//     border-radius: $border-radius-medium;
//     border: 1px solid $font-accent;
//     background-color: $white;
//     &::after {
//         content: url('../assets/icons/white-check.svg');
//         position: absolute;
//         top: .1rem;
//         visibility: hidden;
//     }
//     &:hover {
//         background-color: black;
//     }
//     &:checked {
//         background-color: $primary;
//         animation: pop-up-big 300ms forwards;
//     }
//     &:checked:after {
//         // animation: pop-up 300ms forwards;
//         visibility: visible;
//     }
// }

// @mixin formCheckboxAfter {
//     content: url('../assets/icons/big-check.svg');
//     position: absolute;
//     top: 1.2rem;
//     visibility: hidden;
//     opacity: 0;
//     transition: ease-out 250ms;
// }

// @mixin formCheckboxChecked {
//     visibility: visible;
//     opacity: 1;
// }

// **** Grid Layout Mixins **** //
// *** Containers Grid Layouts
@mixin displayGrid {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: minmax(0, 1fr);
    grid-auto-rows: minmax(0, 1fr);
}

// * Big Container
@mixin bigContainerGrid {
    @include displayGrid;
    grid-template-rows: repeat(8, minmax(0, 1fr));
    gap: $spacing-2x-large 0px;
}

// * Big Container 2
@mixin bigContainerGrid2 {
    @include displayGrid;
    grid-template-rows: repeat(6, minmax(0, 1fr));
    gap: $spacing-2x-large 0px;
}

// * Big Container 3
@mixin bigContainerGrid3 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.4fr) minmax(0, 0.4fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// * Big Container 4
@mixin bigContainerGrid4 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.6fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1.2fr) minmax(0, 4fr);
    gap: $spacing-2x-large 0px;
}

// * Big Container 4
@mixin bigContainerGrid5 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.6fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1.2fr);
    gap: $spacing-2x-large 0px;
}

// * Small Container
@mixin twoBlockGrid {
    @include displayGrid;
    grid-auto-flow: column dense;
    grid-template-rows: minmax(0, 1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

@mixin smallContainerGrid {
    @include displayGrid;
    grid-template-rows: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
    // calc($spacing-2x-large + 0.5rem)
}

// ***** New Member Container Grid Layouts
// * Big Container Grid 2
@mixin bigContainer2Grid {
    @include displayGrid;
    grid-template-columns: minmax(0, 1.6fr) minmax(0, 0.4fr);
    gap: $spacing-2x-large 0px;
}

// * Small Container Grid 2
@mixin smallContainerGrid2 {
    @include displayGrid;
    grid-template-rows: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// * Small Container Grid 3
@mixin smallContainerGrid3 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.6fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 0.6fr) minmax(0, 0.6fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// * Small Container Grid 4
@mixin smallContainerGrid4 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.8fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 3fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// ***** New Application Container Grid Layout
// * NA Small Container Grid 3
@mixin naSmallContainerGrid3 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.8fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// * NA Small Container Grid 4
@mixin naSmallContainerGrid4 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// *** Rowspan Grid Layouts
// * Rowspan Empty
@mixin rowspanEmpty {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// ** Big Container Grid Layouts
// * Rowspan 2
@mixin rowspan2 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 3
@mixin rowspan3 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.5fr) minmax(0, 0.9fr) minmax(0, 0.28fr) minmax(0, 0.9fr) minmax(0, 0.5fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 4
@mixin rowspan4 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.4fr) minmax(0, 1.6fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 5
@mixin rowspan5 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.4fr) minmax(0, 1.6fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 6
@mixin rowspan6 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr)minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 7
@mixin rowspan7 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr)minmax(0, 1.3fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 8
@mixin rowspan8 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
}

// ** END ---- Big Container Grid Layouts
// *** Small Container Grid Layouts
// ** Small Container 2 Grid Layouts
// * Rowspan 1
@mixin smallcon2Rowspan1 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 2
@mixin smallcon2Rowspan2 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 0.6fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 3
@mixin smallcon2Rowspan3 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 0.6fr);
    gap: 0px $spacing-2x-large;
}

// ** END ---- Small Container 2 Grid Layouts
// ** Small Container 3 Grid Layouts
// * Rowspan 1
@mixin smallcon3Rowspan1 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 3
@mixin smallcon3Rowspan3 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 0.4fr) minmax(0, 0.6fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 4
@mixin smallcon3Rowspan4 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 5
@mixin smallcon3Rowspan5 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.4fr) minmax(0, 2.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 8
@mixin smallcon3Rowspan8 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 0.4fr) minmax(0, 0.6fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// ** END ---- Small Container 3 Grid Layouts
// ** Small Container 4 Grid Layouts
// * Rowspan 1
@mixin smallcon4Rowspan1 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

@mixin smallcon4Rowspan2 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 3
@mixin smallcon4Rowspan3 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.6fr) minmax(0, 0.8fr) minmax(0, 0.8fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 4
@mixin smallcon4Rowspan4 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 5
@mixin smallcon4Rowspan5 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 6
@mixin smallcon4Rowspan6 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// ** END ---- Small Container 4 Grid Layouts
// *** New Application Grid Layouts
// ** Small Container 3
@mixin naSmallcon3Rowspan1 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

@mixin naSmallcon3Rowspan2 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// ** Big Container 2
@mixin nabigContainer2Grid {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: minmax(0, 1fr);
    grid-template-rows: minmax(0, 0.8fr) minmax(0, 2.6fr) minmax(0, 2.6fr);
    gap: $spacing-2x-large 0px;
}

@mixin naRowspan1 {
    display: grid;
    grid-auto-flow: row;
    grid-auto-columns: minmax(0, 1fr);
    grid-auto-rows: minmax(0, 0.6fr);
    grid-template-rows: minmax(0, 0.6fr) minmax(0, 0.2fr) minmax(0, 0.6fr);
    gap: $spacing-2x-large 0px;
}

@mixin naRowspanContainer {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: minmax(0, 1fr);
    grid-auto-rows: minmax(0, 1fr);
    grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}