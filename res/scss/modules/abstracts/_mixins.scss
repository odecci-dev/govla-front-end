// *** Nav Mixins
@mixin submenu {
    position: absolute;
    z-index: -9;
    opacity: 0;
    visibility: hidden;
    display: flex;
    flex-direction: column;
    top: 0;
    background-color: $primary;
    pointer-events: none;
}

// *** Dashboard Mixins
// * Dashboard 1
@mixin dashboard {
    position: fixed;
    right: 0;
    bottom: 0;
    height: calc(100% - 10%);
    width: calc(100% - 8%);
    z-index: 10;
}

// * Dashboard 2
@mixin dashboard2 {
    @include dashboard;
    background-color: $third-bg;
}

// *** Dashboard Grid Layouts
// ** md-con-2
@mixin md-con-2 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 0.6fr)minmax(0, 1.4fr);
    gap: 1rem 0;
}

// * md-card-wrapper
@mixin md-card-wrapper {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-columns: minmax(0, 1fr)minmax(0, 1fr)minmax(0, 1fr);
    gap: 10px 10px;
}

// * md-big-card
@mixin md-big-card {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 0.2fr)minmax(0, 1.8fr);
    gap: 1rem 0;
}

// * md-big-card-div-1
@mixin md-big-card-div-1 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-columns: minmax(0, 1fr)minmax(0, 1fr);
}

// * md-big-card-div-2
@mixin md-big-card-div-2 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 1fr);
}

// ** md-con-3
@mixin md-con-3 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 1.2fr) minmax(0, 1fr);
    gap: 1rem 0;
}

// * md-con-3-card-1
@mixin md-con-3-card-1 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 0.5fr) minmax(0, 0.1fr) minmax(0, 1fr);
    gap: 1rem 0px;
}

// * md-con-3-card-2
@mixin md-con-3-card-2 {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-rows: minmax(0, 0.2fr) minmax(0, 1fr) minmax(0, 0.2fr);
    gap: 1rem 0px;
}

// *** Defaults
// * Container Default
@mixin containerDefault {
    border-radius: $border-radius-large;
    background-color: $white;
    box-shadow: $box-shadow;
}

@mixin containerDefault2 {
    @include containerDefault;
    box-shadow: $box-shadow-2;
}

// *** Button Mixins
// * Primary Button
@mixin primaryButton {
    border-radius: $border-radius-medium;
    padding: $btn-padding-2;
    font-size: $font-size-medium;
    font-weight: $font-weight-bold;
    color: $white;
    background-color: $primary;
    box-shadow: $box-shadow;
    cursor: pointer;
}

// * Secondary Button
@mixin secondaryButton {
    @include primaryButton;
    padding: $btn-padding-4;
}

// * Decline Button
@mixin declineButton {
    @include primaryButton;
    background: transparent;
    color: $alert;
    border: 1px solid $alert;
    padding: $btn-padding-4;
    transition: all 300ms ease-in-out;
}

@mixin declineButtonHover {
    background-color: $alert;
    color: $white;
}

// * Secondary Button
@mixin progressBarButton {
    @include primaryButton;
    padding: 1.5rem 1rem;
}

// * Table Button
@mixin tableButton {
    @include primaryButton;
    padding: $btn-padding-5;
}

// * Transparent Button
@mixin transparentButton {
    cursor: pointer;
    font-size: calc($font-size + .1rem);
    font-weight: $font-weight-bold;
    color: $primary;
    background: transparent;
}

// * Transparent Button 2
@mixin transparentButton2 {
    @include transparentButton;
    padding: $btn-padding-2;
    font-size: $font-size-medium;
}

// * Add/Subtract Button
@mixin addOrSubButton {
    cursor: pointer;
    font-size: $font-size-xx-large;
    font-weight: $font-weight-bold;
    width: 4rem;
    height: 4rem;
    border-radius: $border-radius-x-small;
    box-shadow: $box-shadow-3;
}

// *** Input Field Mixins
// * Input Field
@mixin inputField {
    font-size: $font-size-large;
    padding: 1rem 2rem;
    border: none;
    outline: none;
    background-color: $primary-bg;
    border-radius: $border-radius-medium;
    box-shadow: inset $box-shadow;
}

// * Input Select Field
@mixin selectField {
    position: relative;
    text-align: left;
    font-size: $font-size-large;
    padding: 1rem 2rem 1rem 2rem;
    border: none;
    outline: none;
    background-color: $primary-bg;
    border-radius: $border-radius-medium;
    -moz-appearance: none;
    /* Firefox */
    -webkit-appearance: none;
    /* Safari and Chrome */
    appearance: none;
}

// * Login Input Field
@mixin loginInputField {
    width: 100%;
    padding: $spacing-2x-large 0 $spacing-large $spacing-large;
    border-radius: $border-radius-medium;
    outline: none;
    border: none;
    color: $font-accent;
    background-color: $primary-bg;
    font-size: $font-size-large;
    box-shadow: inset 0px 4px 4px rgba(0, 0, 0, 0.25);
}

// * Table Checkbox
@mixin tableCheckboxInput {
    cursor: pointer;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    outline: none;
    appearance: none;
    -webkit-appearance: none;
    aspect-ratio: 1/1;
    height: 2rem;
    width: 2rem;
    border-radius: .4rem;
    background-color: $primary-bg;
}

// * Form Radio Buttons
@mixin formRadioButtons {
    @include tableCheckboxInput;
    box-shadow: none;
    aspect-ratio: none;
    height: 4.4rem;
    width: 4.4rem;
    border-radius: $circle;
    border: max(1px, 0.15em) solid $primary;
    background-color: $white;
}

@mixin formRadioButtonsAfter {
    content: '';
    position: absolute;
    width: calc(100% - 50%);
    height: calc(100% - 50%);
    border-radius: $circle;
    background-color: $primary;
    visibility: hidden;
    opacity: 0;
    transition: ease-out 250ms;
}

@mixin formRadioButtonsChecked {
    visibility: visible;
    opacity: 1;
}

// * Form Checkbox
@mixin formCheckbox {
    @include tableCheckboxInput;
    box-shadow: none;
    height: 4.4rem;
    width: 4.4rem;
    border-radius: $border-radius-medium;
    border: 1px solid $font-accent;
    background-color: $white;
}

@mixin formCheckboxAfter {
    content: url('../assets/icons/big-check.svg');
    position: absolute;
    top: 1.2rem;
    visibility: hidden;
    opacity: 0;
    transition: ease-out 250ms;
}

@mixin formCheckboxChecked {
    visibility: visible;
    opacity: 1;
}

// **** Grid Layout Mixins **** //
// *** Containers Grid Layouts
@mixin displayGrid {
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: minmax(0, 1fr);
    grid-auto-rows: minmax(0, 1fr);
}

// * Big Container
@mixin bigContainerGrid {
    @include displayGrid;
    grid-template-rows: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// * Small Container
@mixin twoBlockGrid {
    @include displayGrid;
    grid-auto-flow: column dense;
    grid-template-rows: minmax(0, 1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

@mixin smallContainerGrid {
    @include displayGrid;
    grid-template-rows: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
    // calc($spacing-2x-large + 0.5rem)
}

// ***** New Member Container Grid Layouts
// * Big Container Grid 2
@mixin bigContainer2Grid {
    @include displayGrid;
    grid-template-columns: minmax(0, 1.6fr) minmax(0, 0.4fr);
    gap: $spacing-2x-large 0px;
}

// * Small Container Grid 2
@mixin smallContainerGrid2 {
    @include displayGrid;
    grid-template-rows: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// * Small Container Grid 3
@mixin smallContainerGrid3 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.6fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 0.6fr) minmax(0, 0.6fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// * Small Container Grid 4
@mixin smallContainerGrid4 {
    @include displayGrid;
    grid-template-rows: minmax(0, 1.2fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 3fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// ***** New Application Container Grid Layout
// * NA Small Container Grid 3
@mixin naSmallContainerGrid3 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.8fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// * NA Small Container Grid 4
@mixin naSmallContainerGrid4 {
    @include displayGrid;
    grid-template-rows: minmax(0, 0.2fr) minmax(0, 1fr);
    gap: $spacing-2x-large 0px;
}

// *** Rowspan Grid Layouts
// * Rowspan Empty
@mixin rowspanEmpty {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// ** Big Container Grid Layouts
// * Rowspan 2
@mixin rowspan2 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 3
@mixin rowspan3 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.4fr) minmax(0, 1fr) minmax(0, 0.4fr) minmax(0, 1fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 4
@mixin rowspan4 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.4fr) minmax(0, 1.6fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 5
@mixin rowspan5 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.4fr) minmax(0, 1.6fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 6
@mixin rowspan6 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr)minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 7
@mixin rowspan7 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr)minmax(0, 1.3fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 8
@mixin rowspan8 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
}

// ** END ---- Big Container Grid Layouts
// *** Small Container Grid Layouts
// ** Small Container 2 Grid Layouts
// * Rowspan 1
@mixin smallcon2Rowspan1 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 2
@mixin smallcon2Rowspan2 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 0.6fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 3
@mixin smallcon2Rowspan3 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 0.6fr);
    gap: 0px $spacing-2x-large;
}

// ** END ---- Small Container 2 Grid Layouts
// ** Small Container 3 Grid Layouts
// * Rowspan 1
@mixin smallcon3Rowspan1 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 3
@mixin smallcon3Rowspan3 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 0.4fr) minmax(0, 0.6fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 4
@mixin smallcon3Rowspan4 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 0.6fr) minmax(0, 1fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 5
@mixin smallcon3Rowspan5 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.4fr) minmax(0, 2.4fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 8
@mixin smallcon3Rowspan8 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 0.4fr) minmax(0, 0.6fr) minmax(0, 0.4fr);
    gap: 0px $spacing-2x-large;
}

// ** END ---- Small Container 3 Grid Layouts
// ** Small Container 4 Grid Layouts
// * Rowspan 1
@mixin smallcon4Rowspan1 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

@mixin smallcon4Rowspan2 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 3
@mixin smallcon4Rowspan3 {
    @include displayGrid;
    grid-template-columns: minmax(0, 0.6fr) minmax(0, 0.8fr) minmax(0, 0.8fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 4
@mixin smallcon4Rowspan4 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 5
@mixin smallcon4Rowspan5 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// * Rowspan 6
@mixin smallcon4Rowspan6 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// ** END ---- Small Container 4 Grid Layouts
// *** New Application Grid Layouts
// ** Small Container 3
@mixin naSmallcon3Rowspan1 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

@mixin naSmallcon3Rowspan2 {
    @include displayGrid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}

// ** Big Container 2
@mixin nabigContainer2Grid {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: minmax(0, 1fr);
    grid-template-rows: minmax(0, 0.8fr) minmax(0, 2.6fr) minmax(0, 2.6fr);
    gap: $spacing-2x-large 0px;
}

@mixin naRowspan1 {
    display: grid;
    grid-auto-flow: row;
    grid-auto-columns: minmax(0, 1fr);
    grid-auto-rows: minmax(0, 0.6fr);
    grid-template-rows: minmax(0, 0.6fr) minmax(0, 0.2fr) minmax(0, 0.6fr);
    gap: $spacing-2x-large 0px;
}

@mixin naRowspanContainer {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: minmax(0, 1fr);
    grid-auto-rows: minmax(0, 1fr);
    grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);
    gap: 0px $spacing-2x-large;
}