*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    font-family: $font-family;
}


/* <html> = the root */

html {
    font-size: 62.5%;
    /* (62.5/100) * 16px = 10px */
}

body {
    font-family: $font-family;
    height: 100vh;
    // overflow: hidden; 
    @include custom-scroll;
}

main {
    height: 100%;
    
}

.main-dashboard {
    overflow-y: scroll;
}

:focus:not(:focus-visible) {
    outline: none;
}

menu,
ol,
ul {
    list-style: none;
    padding-left: 0;
}

a {
    text-decoration: none;
}

dialog {
    border: none !important;
}

hr {
    border: 0;
}

input::-webkit-inner-spin-button {
    display: none;
}

img {
    max-width: 100%;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-drag: none;
    -webkit-user-select: none;
    -ms-user-select: none;
}

img[alt='Left Button'] {
    cursor: pointer;
    pointer-events: all;
    transition: 200ms ease-in-out;
    &:hover {
        transform: translateX(-1rem)
    }
}

img[alt='funnel'] {
    transition: scale 150ms ease-in-out;
    &:hover {
        scale: 1.150;
    }
}

img[alt='upload-image'] {
    width: 100%;
    height: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
    // background-size: contain;
    // background-repeat: no-repeat;
    // background-position: 50% 50%;
    border-radius: $border-radius-medium;
}

button:has([alt='filter']) {
    cursor: pointer;
    background: none;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    isolation: isolate;
    &::before {
        content: '';
        z-index: -1;
        position: absolute;
        width: 4rem;
        height: 4rem;
        background-color: $secondary-bg;
        border-radius: $border-radius-small;
        opacity: 0;
        transition: all 150ms ease-in-out;
    }
    &:hover::before {
        opacity: .6;
        transition: all 150ms ease-in-out;
    }
}

button {
    font-family: $font-family;
    border: none;
    outline: none;
    cursor: pointer;
}



// * Custom Scroll and Overflow-y: auto made Global
.rowspan.table,
.table-container,
.table-container-2 {
    @include custom-scroll;
    overflow-x: hidden;
    overflow-y: auto;
}

table {
    border-collapse: collapse;
    width: 100%;
    overflow-y: auto;
    tr:first-of-type {
        isolation: isolate;
        position: sticky;
        z-index: 5;
        top: 0;
        &::after {
            content: '';
            z-index: -1;
            position: absolute;
            inset: 0;
            background-color: rgba(253, 253, 253, 0.9);
            backdrop-filter: blur(.2rem);
            box-shadow: 0px 2px 11px 1px rgba(233, 233, 233, 0.75);
        }
    }
    
    tr:not(:first-of-type):hover {
        cursor: pointer;
        background-color: $primary;
        color: $white;
        transition: 300ms ease-out;
        &>.td-btns>.td-btn-wrapper>button {
            background-color: $white;
            color: $primary;
            transition: 200ms ease-out;
            &:hover {
                background-color: $black;
                color: $white;
            }
        }
        &>.td-btns>.td-btn-wrapper>button.a-btn-trash {
            transition: 200ms ease-in-out;
            color: $white;
            &:hover {
                color: $black;
            }
        }
        &>.td-btns>.td-btn-wrapper>button.a-btn-trash-3 {
            transition: 200ms ease-in-out;
            color: $white;
            &:hover {
                color: $black;
            }
        }
        // * Remitted Styles
        &>.td-btns>.td-btn-wrapper>.a-btn-view-3.remitted {
            background-color: $black !important;
            color: unset !important;
            // transition: 200ms ease-out;
            &:hover {
                background-color: unset;
                color: unset;
            }
        }
    }
    tr:not(:first-of-type):hover {
        &>.td-wrapper>.td-inner-wrapper>span {
            color: $white;
            transition: 200ms ease-out;
        }
    }
    // * Background Color Odd   
    tr:nth-of-type(odd) {
        background-color: $primaryTR2;
    }
    th {
        position: sticky;
        top: 0;
        padding: 0 min(1rem);
    }
    .td-num-out {
        padding: 0 $spacing-2x-large;
        font-weight: $font-weight-bold;
    }
    .td-wrapper {
        display: flex;
        align-items: center;
        .td-num.td-no-margin {
            margin: 0;
        }
        .td-num {
            margin-left: $spacing-large;
            font-weight: $font-weight-bold;
        }
        .td-name {
            margin-left: 2rem;
        }
        .td-inner-wrapper {
            display: flex;
            flex-direction: column;
            margin-left: $spacing-2x-large;
            .td-name {
                margin-left: unset;
            }
            span:nth-of-type(2) {
                font-size: $font-size;
            }
        }
    }
    .td-btn-wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: $spacing-large;
        // * Remiited Button Styles
        .a-btn-view-3 {
            &.remitted {
                pointer-events: none;
                cursor: auto;
                background-color: $black;
                padding: 0.5rem 3.2rem;
                &::after {
                    content: url('/res/assets/icons/circle-check-2.svg');
                    display: block;
                }
            }
        }
    }

}

// * For Printables
.page-break-after {
    page-break-after: always;
}

// * Active Primary Color
.active {
    display: block;
    background-color: $primary;
    color: $white;
    transition: all 200ms ease-in-out;
}

.activeLink {
    transition: all 500ms ease-in;
    background: $primaryGrad1;
    // background-color: $primary;
}

.activeSublink {
    transition: all 500ms ease-in;
    font-weight: $font-weight-black;
    background: rgba(0, 0, 0, 0.125);
    background-blend-mode: darken;
}

// * Active Table Td Column
.activeColumn {
    transition: all 200ms ease-in-out;
    background-color: $primary;
    color: $white;
    &:nth-of-type(odd) {
        background-color: $primaryTR3;
    }
    &>.td-btns>.td-btn-wrapper>button {
        background-color: $white;
        color: $primary;
        transition: 200ms ease-out;
        &:hover {
            background-color: $black;
            color: $white;
        }
    }
    &>.td-btns>.td-btn-wrapper>button.a-btn-trash {
        transition: 200ms ease-in-out;
        color: $white;
        &:hover {
            color: $black;
        }
    }
    &>.td-btns>.td-btn-wrapper>button.a-btn-trash-3 {
        transition: 200ms ease-in-out;
        color: $white;
        &:hover {
            color: $black;
        }
    }
}

// * Active Green Color
.activeGreen {
    display: block;
    background-color: $green;
    color: $white;
    transition: all 200ms ease-in-out;
}

.textPrimary {
    color: $primary;
}

.textBold {
    font-weight: $font-weight-bold;
}

.textGreen {
    color: $green;
}

.textAlert {
    color: $alert;
}

// * Primary Button Global
.button {
    @include primaryButton;
}

.button-2 {
    @include primaryButton2;
}

.button-2-green {
    @include primaryButton2Green;
}

.button-2-alert {
    @include primaryButton2Alert;
}

// * Modal Button Global
.modalButton {
    @include modalButton;
}

// * Modal Alert Button Global
.modalAlertButton {
    @include modalAlertButton;
}

// * Transparent Button Global
.transparentButton {
    @include transparentButton;
}

// * Transparent 2 Button Global
.transparentButton2 {
    @include tableTransparentTrashButton;
}

// * Transparent 3 (Show All) Button Global
.transparentButton3 {
    @include transparentButton5;
}

// * Transparent 4 (Show All 2) Button Global
.transparentButton4 {
    @include transparentButton5;
}

// * Transparent Underline Button Global
.transparentButtonUnderline {
    @include transparentButton4;
}

// * Table View Button Global
.a-btn-view {
    @include secondaryButton;
}

// * Table View 2 Button Global
.a-btn-view-2 {
    @include tableButton;
}

// * Table View 3 Button Global
.a-btn-view-3 {
    @include tableButton2;
}

// * Table Trash (Transparent) Button Global
.a-btn-trash {
    @include transparentButton2;
}

// * Table Trash 2 Button Global
.a-btn-trash-2 {
    @include tableButton;
}

// * Table Trash 3 (Transparent) Button Global
.a-btn-trash-3 {
    @include tableTransparentTrashButton;
}

// * Table Trash 4 Button Global
.a-btn-trash-4 {
    @include secondaryButton;
}

// * Table Trash 5 Button Global
.a-btn-trash-5 {
    @include tableButton3;
}

// * Table Edit Button Global
.a-btn-edit {
    @include tableButton;
}

// * Table Delete Button Global
.a-btn-delete {
    @include tableButton;
}

// * View Loan Details Button Global
.viewLoanDetailsButton {
    @include transparentButton3;
}

// * Decline Button Global
.declineButton {
    @include declineButton;
}

// * Release Button Global
.releaseButton {
    @include releaseButton;
}

// * Add or Sub Button Global
.addOrSubButton {
    @include addOrSubButton;
}

// * File Button Global
.fileButton {
    @include fileButton;
}

// * Table Chip Global
.tb-chip {
    @include tableChips;
}

// * Table Chip w/ X Global
.tb-chip-w-x {
    @include tableChipsWithX;
}

// * Checkbox Global
.checkbox {
    @include tableCheckboxInput;
}

// * Dropdown Button Global
.dropdown-button {
    width: 20rem;
    .dropdown-selected {
        @include dropdownSelectButton;
    }
    
    .dropdown-selected h4,
    .dropdown-select-box h4 {
        cursor: pointer;
        font-size: $font-size-medium;
        font-weight: $font-weight-bold;
        color: $white;
    }
    
    .dropdown-select-box {
        display: flex;
        // width: 30rem;
        flex-direction: column;
        position: relative;
        .options-container {
            @include dropdownButtonContainer;
        }
    }
}

// * Dropdown Select Button Global Styles
.dropdown-selected {
    @include dropdownSelectButton;
}

.dropdown-selected h4,
.dropdown-select-box h4 {
    cursor: pointer;
    font-size: $font-size-large;
    font-weight: $font-weight-bold;
    color: $black;
}

.dropdown-select-box {
    display: flex;
    // width: 30rem;
    flex-direction: column;
    position: relative;
    .dropdown-options-container {
        @include dropdownButtonContainer;
    }
}

// * Select Input Global Styles
.selected {
    @include selectDropdown;
}

.selected h4,
.select-box h4 {
    cursor: pointer;
    font-size: $font-size-large;
    font-weight: $font-weight-bold;
    color: $black;
}

.select-box {
    display: flex;
    // width: 30rem;
    flex-direction: column;
    position: relative;
    .options-container {
        @include selectDropdownOptionContainer;
    }
}

// * Search Bar
.search-bar {
    @include searchbar;
}

// * Search Bar 2
.search-bar-2 {
    @include searchbar2;
}

.primary-search-bar {
    @include primarySearchBar;
}

// * Input Global
.input-wrapper {
    position: relative;
    display: flex;
    flex-direction: column;
    >span {
        margin-bottom: 1rem;
        font-weight: $font-weight-bold;
        font-size: calc($font-size + .2rem);
    }
    // * Input Global Styles
    input {
        @include inputField;
        // margin-bottom: 1rem;
    }
    input[type='radio'] {
        padding: 0 !important;
    }
    // * Image Input Button
    input.input-image {
        @include inputImageButton;
        // * Breakpoints
        @include mdBreakpoint {
            padding: 2.8rem 4rem;
        }
        @include breakpointMax(830px) {
            padding: 3.6rem 4rem;
        }
    }
    // * Applicant Signature
    #imageUploadApplicantSign::before {
        content: 'Upload Applicant Signature';
        white-space: nowrap;
        // * Breakpoints
        @include mdBreakpoint {
            white-space: pre-wrap;
        }
    }
    // * Co-Maker Signature
    #imageUploadCoMakerSign::before {
        content: 'Upload Co-Maker Signature';
        white-space: nowrap;
        // * Breakpoints
        @include mdBreakpoint {
            white-space: pre-wrap;
        }
    }
    .box-wrap {
        display: flex;
        align-items: center;
        .radio-btn-wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1rem;
            span {
                font-size: calc($font-size + .2rem) ;
                font-weight: $font-weight-bold;
                white-space: nowrap;
            }
            input[type="radio"] {
                @include formRadioButtons;
            }
            // input[type="radio"]:focus {
            //     outline: max(1px, 0.15em) solid $primary;
            //     outline-offset: max(2px, 0.15em);
            // }
        }
        .radio-btn-wrapper.horizontal {
            display: flex;
            flex-direction: row !important;
            align-items: center;
            span {
                margin-bottom: unset !important;
            }
        }
    }
}

// *** For Adding Form Styles
.input-wrapper-add {
    display: flex;
    flex-direction: column;
    span {
        font-size: calc($font-size + .2rem);
        font-weight: $font-weight-bold;
        margin-bottom: 1rem;
    }
    // * Input Global Styles
    input {
        @include inputField;
        // margin-bottom: 1rem;
    }
    .inner-container-wrapper {
        display: flex;
        flex-direction: row;
        gap: 2rem;
        @include mdBreakpoint {
            flex-direction: column;
            align-items: flex-end;
        }
        .input-inner-wrapper:first-of-type {
            width: 100%;
        }
        .input-inner-wrapper:last-of-type {
            display: flex;
            flex-direction: row;
            gap: 2rem;
        }
    }
    
}
.input-inner-wrapper {
    display: flex;
    flex-direction: column;
    
}

// * Button Wrapper
.btn-wrapper {
    // * Image Input Button
    input.input-image {
        @include inputImageButton2;
        &.upload-profile-image-btn::before {
            content: 'Upload Image';
        }
        &.attach-file-btn::before {
            content: 'Attach Files';
        }
    }
}

// * File Wrapper 
.file-wrapper {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 0.5fr));
    gap: $spacing-large $spacing-2x-large;
}

// * Input Modal Global
.input-wrapper-modal {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    >span {
        font-weight: $font-weight-bold;
        font-size: $font-size-medium;
    }
    // * Input Global Styles
    input {
        @include inputField;
    }
}

// * Cancel Button
.cancel-btn-wrapper {
    padding: 2rem 0;
    display: flex;
    justify-content: flex-end;
}

// * Calendar Select
.calendarSelect {
    // font-family: $font-family;
    font-size: $font-size-medium;
    font-weight: $font-weight-bold;
    color: $font-accent-2;
}

// ***** Validation Classes ***** //

.validation {
    // position: absolute;
    margin-top: 0.6rem;
    font-size: 1.2rem;
}

.is-invalid {
    color: $alert !important;
    white-space: pre-wrap !important;
    // text-align: center;
}

.is-valid {
    color: $green !important;
    white-space: pre-wrap !important;
    // text-align: center;
}

.input-is-valid {
    border-radius: $border-radius-medium !important;
    border: 1px solid $green !important;
    box-shadow: inset $box-shadow,
                0px 0px 0pc 4px $greenTR !important;
}

.input-is-invalid {
    border-radius: $border-radius-medium !important;
    border: 1px solid $alert !important;
    box-shadow: inset $box-shadow, 
                0px 0px 0pc 4px $alertTR !important;
}

.input-radio-is-valid {
    border-radius: $circle !important;
    border: max(0.4rem, 0.3em) solid $primary !important;
    box-shadow: 0px 0px 0pc 4px $primaryTR2 !important;
}

.input-radio-is-invalid {
    border-radius: $circle !important;
    border: max(0.4rem, 0.3em) solid $alert !important;
    box-shadow: 0px 0px 0pc 4px $alertTR !important;
}

.input-signature-is-valid {
    // border-radius: $circle !important;
    border: 1px solid $green !important;
    box-shadow: 0px 0px 0pc 4px $greenTR !important;
    // box-shadow: 0px 0px 0pc 4px $primaryTR2 !important;
}

.input-signature-is-invalid {
    // border-radius: $circle !important;
    border: 1px solid $alert !important;
    box-shadow: 0px 0px 0pc 4px $alertTR !important;
    // box-shadow: 0px 0px 0pc 4px $alertTR !important;
}

// ***** END of Validation Classes ***** //

// *SECTION    border: 1px solid #1dbb1d;
    // box-shadow: 0px 0px 0pc 4px #61c1613b;